plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
x[1] <- 0
for (i in 2:1000) {
x[i] <- x[i-1] + rnorm(1)
}
rand_walk <- ts(x)
plot(x, main = 'Random walk', ylab = '', xlab = 'Days',
type = 'l', col = "blue", lwd = 2)
print(acf(rand_walk))
# Detrend data
print(diff(rand_walk))
# Detrend data
plot(diff(rand_walk))
# diff of rand_walk = pure random process , stationality
acf(diff(rand_walk))
# Generate noise
noise=rnorm(10000)
# Introduce a variable
ma_2=NULL
for(i in 3:10000){
ma_2[i]=noise[i]+0.7*noise[i-1]+0.2*noise[i-2]
}
# Shift data to left by 2 units
moving_average_process=ma_2[3:10000]
# Put time series structure on a vanilla data
moving_average_process=ts(moving_average_process)
# Partition output graphics as a multi frame of 2 rows and 1 column
par(mfrow=c(2,1))
# plot the process and plot its ACF
plot(moving_average_process, main='A moving average process of order 2', ylab=' ', col='blue')
acf(moving_average_process, main='Correlogram of a moving average process of order 2')
par(mfrow=c(2,1))
# plot the process and plot its ACF
plot(moving_average_process, main='A moving average process of order 2', ylab=' ', col='blue')
acf(moving_average_process, main='Correlogram of a moving average process of order 2')
par(mfrow=c(2,1))
# plot the process and plot its ACF
plot(moving_average_process, main='A moving average process of order 2',
ylab=' ', col='blue')
acf(moving_average_process, main='Correlogram of a moving average process of order 2')
# Partition output graphics as a multi frame of 2 rows and 1 column
par(mfrow=c(1,2))
# plot the process and plot its ACF
plot(moving_average_process, main='A moving average process of order 2',
ylab=' ', col='blue')
acf(moving_average_process, main='Correlogram of a moving average process of order 2')
# Partition output graphics as a multi frame of 1 rows and 2 column
par(mfrow=c(1,2))
# plot the process and plot its ACF
plot(moving_average_process, main='A moving average process of order 2',
ylab=' ', col='blue')
acf(moving_average_process, main='Correlogram of a moving average process of order 2')
## Servival analysis Start ----
library(survival)
data("ovarian")
head(ovarian)
summary(ovarian)
nrow(ovarian)
View(ovarion)
View(ovarian)
?ovarian
# sampling time series data
set.seed(123)
(acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
(acf(arima.sim(n=1000, model=list(ma=c(1, 0.5, 0.5)))))
(acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
head(autocorr)
0.5/1.5
autocov <- acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5))), type = "covarience")
autocov <- acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5))), type = "covariance")
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
head(autocov)
plot(autocov)
autocov$acf
?acf
autocorr$acf
# covarience at lag (0)
autocov$acf[1]
# autocorr at lag (2)
autocorr$acf[3]
autocorr$acf[2] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
# autocorrelation
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
getwd()
s <- read.csv(file = file.choose())
s <- load(file = file.choose())
str(s)
s
s <- readRDS(file = file.choose())
s <- readRDS(file = file.choose())
?readRDS
s <- load(file.choose())
s
View(sales)
load(file.choose())
rm(s)
sales[sales$agent_code == '3120244',]
rm(sales)
rm(list = ls())
## Project telco churn
telco <- read.csv(file = "./data-day6/12-Telco-Customer-Churn.csv" )
setwd("/Users/Danny/Documents/Learning/Machine Learning for business/")
## Project telco churn
telco <- read.csv(file = "./data-day6/12-Telco-Customer-Churn.csv" )
# clear customer id
telco$customerID <- NULL
telco$SeniorCitizen <- as.factor(telco$SeniorCitizen)
library(rpart)
library(rpart.plot)
# Decision tree
tree <- rpart(Churn ~ ., data = telco)
rpart.plot(tree)
tree$variable.importance
library(randomForest)
telco_rf <- na.omit(telco)
rf <- randomForest(Churn ~ ., data = telco_rf)
vu <- varUsed(rf, count = TRUE)
vu_sorted <- sort(vu, decreasing = TRUE, index.return = TRUE)
dotchart(vu_sorted$x, names(rf$forest$xlevels[vu_sorted$ix]))
varImpPlot(rf)
# Chose important data
pca <- prcomp(telco, scale = TRUE)
library(proxy)
telco %>%
select(Contract, tenure, TotalCharges, TechSupport,
OnlineSecurity, MonthlyCharges, DeviceProtection, InternetService) -> df
library(dplyr)
telco %>%
select(Contract, tenure, TotalCharges, TechSupport,
OnlineSecurity, MonthlyCharges, DeviceProtection, InternetService) -> df
library(proxy)
dist <- dist(df)
