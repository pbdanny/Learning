data("ovarian")
head(ovarian)
summary(ovarian)
nrow(ovarian)
View(ovarion)
View(ovarian)
?ovarian
# sampling time series data
set.seed(123)
(acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
(acf(arima.sim(n=1000, model=list(ma=c(1, 0.5, 0.5)))))
(acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
head(autocorr)
0.5/1.5
autocov <- acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5))), type = "covarience")
autocov <- acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5))), type = "covariance")
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
head(autocov)
plot(autocov)
autocov$acf
?acf
autocorr$acf
# covarience at lag (0)
autocov$acf[1]
# autocorr at lag (2)
autocorr$acf[3]
autocorr$acf[2] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
# autocorrelation
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
autocorr <- (acf(arima.sim(n=1000, model=list(ma=c(0.5, 0.5)))))
autocorr$acf[3] # autocorr at lag (2)
autocorr$acf[2] # autocorr at lag (1)
getwd()
s <- read.csv(file = file.choose())
s <- load(file = file.choose())
str(s)
s
s <- readRDS(file = file.choose())
s <- readRDS(file = file.choose())
?readRDS
s <- load(file.choose())
s
View(sales)
load(file.choose())
rm(s)
sales[sales$agent_code == '3120244',]
rm(sales)
rm(list = ls())
## Simulate AR(p) process
X_ts <- arima.sim(model = list(c(0.4)), = 10000)
## Simulate AR(p) process
X_ts <- arima.sim(model = list(c(0.4)),n = 10000)
plot(X_tx)
plot(X_ts)
plot(acf(X_tx))
plot(acf(X_ts))
acf(X_ts)
acf(X_ts)
plot(X_ts)
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(c(0.4)),n = 10000)
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(c(0.4)),n = 10000)
par(mfrow = c(2,1))
plot(X_ts)
acf(X_ts)
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(c(0.4)),n = 10000)
par(mfrow = c(2,1))
plot(X_ts, main = 'AR(1) Time Series on White Noise, phi = 0.4')
acf(X_ts, main = 'ACF')
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(c(0.4)),n = 10000)
par(mfrow = c(2,1))
plot(X_ts, main = 'AR(1) Time Series on White Noise, phi = 0.4')
acf(X_ts, main = 'ACF')
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(c(0.4)),n = 10000)
plot(X_ts, main = 'AR(1) Time Series on White Noise, phi = 0.4')
dev.off()
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(c(0.4)),n = 10000)
plot(X_ts, main = 'AR(1) Time Series on White Noise, phi = 0.4')
acf(X_ts, main = 'ACF of AR(1), phi = 0.4')
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(c(0.4)),n = 10000)
par(mfrow = c(2,1))
plot(X_ts, main = 'AR(1) Time Series on White Noise, phi = 0.4')
acf(X_ts, main = 'ACF of AR(1), phi = 0.4')
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(ar = c(0.4)),n = 10000)
par(mfrow = c(2,1))
plot(X_ts, main = 'AR(1) Time Series on White Noise, phi = 0.4')
acf(X_ts, main = 'ACF of AR(1), phi = 0.4')
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(ar = c(0.4)),n = 1000)
par(mfrow = c(2,1))
plot(X_ts, main = 'AR(1) Time Series on White Noise, phi = 0.4')
acf(X_ts, main = 'ACF of AR(1), phi = 0.4')
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(ar = c(1)),n = 1000)
par(mfrow = c(2,1))
plot(X_ts, main = 'AR(1) Time Series on White Noise, phi = 0.4')
acf(X_ts, main = 'ACF of AR(1), phi = 0.4')
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(ar = c(1)),n = 1000)
par(mfrow = c(2,1))
plot(X_ts, main = 'AR(1) Time Series on White Noise, phi = 0.4')
acf(X_ts, main = 'ACF of AR(1), phi = 0.4')
dev.off()
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(ar = c(1)),n = 1000)
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(list(ar = c(1)),n = 1000)
X_ts <- arima.sim(list(ar = 1,n = 1000)
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(list(ar = 1,n = 1000))
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(list(ar = 1),n = 1000)
?arima.sim
## Simulate AR(p) process
set.seed(2016)
X_ts <- arima.sim(model = list(ar = c(0.7, 0.2)), n = 1000)
par(mfrow = c(2,1))
plot(X_ts, main = 'AR(1) Time Series on White Noise, phi = 0.4')
acf(X_ts, main = 'ACF of AR(1), phi = 0.4')
## Simulate AR(p) process
set.seed(2016)
phi_1 <- 0.5
phi_2 <- 0.4
X_ts <- arima.sim(model = list(ar = c(phi_1, phi_2)), n = 1000)
par(mfrow = c(2,1))
plot(X_ts, main = 'AR(1) Time Series on White Noise, phi = 0.4')
acf(X_ts, main = 'ACF of AR(1), phi = 0.4')
dev.off()
plot(X_ts, main = paste0('AR(1) Time Series on White Noise, phi 1 : ', phi_1, ' phi 2 : ', phi_2))
par(mfrow = c(2,1))
dev.off()
par(mfrow = c(2,1))
plot(X_ts, main = paste0('AR(1) Time Series on White Noise, phi 1 : ', phi_1, ' phi 2 : ', phi_2))
acf(X_ts, main = 'ACF of AR(1), phi = 0.4')
dev.off()
par(mfrow = c(2,1))
plot(X_ts, main = paste0('AR Time Series , phi 1 : ', phi_1, ' phi 2 : ', phi_2))
acf(X_ts, main = 'ACF of AR(1), phi = 0.4')
acf(X_ts, main = 'ACF of AR')
dev.off()
par(mfrow = c(2,1))
plot(X_ts, main = paste0('AR Time Series , phi 1 : ', phi_1, ' phi 2 : ', phi_2))
acf(X_ts, main = 'ACF of AR')
## Simulate AR(p) process
set.seed(2016)
phi_1 <- 0.5
phi_2 <- -0.4
X_ts <- arima.sim(model = list(ar = c(phi_1, phi_2)), n = 1000)
par(mfrow = c(2,1))
plot(X_ts, main = paste0('AR Time Series , phi 1 : ', phi_1, ' phi 2 : ', phi_2))
acf(X_ts, main = 'ACF of AR')
par(mfrow = c(3 ,1))
phi_1 <- .6
phi_2 <- .2
## week 4 Partial ACF
# ACF of MA(q) coefficent will cease at time = q
set.seed(123)
par(mfrow = c(3 ,1))
phi_1 <- .6
phi_2 <- .2
data_ts <- arima.sim(n = 500, list(ar = c(phi_1, phi_2)))
plot(data_ts, main=
paste("Autoregressive Process with phi1=",phi_1," phi2=",phi_2) )
plot(data_ts, main=
paste("Autoregressive Process with phi1 =",phi_1," phi2 =",phi_2) )
par(mfrow = c(3 ,1))
dev.off()
## week 4 Partial ACF
# ACF of MA(q) coefficent will cease at time = q
set.seed(123)
par(mfrow = c(3 ,1))
phi_1 <- .6
phi_2 <- .2
data_ts <- arima.sim(n = 500, list(ar = c(phi_1, phi_2)))
plot(data_ts, main=
paste("Autoregressive Process with phi1 =",phi_1," phi2 =",phi_2) )
acf(data_ts, main="Autocorrelation Function")
acf(data_ts, type="partial", main="Partial Autocorrelation Function")
## week 4 Partial ACF
# ACF of MA(q) coefficent will cease at time = q
set.seed(123)
par(mfrow = c(3 ,1))
phi_1 <- .6
phi_2 <- .2
data_ts <- arima.sim(n = 500, list(ma = c(phi_1, phi_2)))
plot(data_ts, main=
paste("Autoregressive Process with phi1 =",phi_1," phi2 =",phi_2) )
acf(data_ts, main="Autocorrelation Function")
acf(data_ts, type="partial", main="Partial Autocorrelation Function")
## week 4 Partial ACF
# ACF of MA(q) coefficent will cease at time = q
set.seed(123)
par(mfrow = c(3 ,1))
phi_1 <- .6
phi_2 <- .2
data_ts <- arima.sim(n = 500, list(ar = c(phi_1, phi_2), ma = c(phi_1, phi_2)))
plot(data_ts, main=
paste("Autoregressive Process with phi1 =",phi_1," phi2 =",phi_2) )
acf(data_ts, main="Autocorrelation Function")
acf(data_ts, type="partial", main="Partial Autocorrelation Function")
set.seed(123)
par(mfrow = c(3 ,1))
phi_1 <- .6
phi_2 <- .2
data_ts <- arima.sim(n = 500, list(ar = c(phi_1, phi_2)))
plot(data_ts, main=
paste("Autoregressive Process with phi1 =",phi_1," phi2 =",phi_2) )
acf(data_ts, main="Autocorrelation Function")
acf(data_ts, type="partial", main="Partial Autocorrelation Function")
set.seed(123)
par(mfrow = c(3 ,1))
phi_1 <- .6
phi_2 <- .2
data_ts <- arima.sim(n = 500, list(ar = c(phi_1, phi_2)))
plot(data_ts, main=
paste("Autoregressive Process with phi1 =",phi_1," phi2 =",phi_2) )
acf(data_ts, main="Autocorrelation Function")
acf(data_ts, type="partial", main="Partial Autocorrelation Function")
set.seed(123)
par(mfrow = c(3 ,1))
phi_1 <- .6
phi_2 <- .2
data_ts <- arima.sim(n = 500, list(ar = c(phi_1, phi_2)))
plot(data_ts, main=
paste("Autoregressive Process with phi1 =",phi_1," phi2 =",phi_2) )
acf(data_ts, main="Autocorrelation Function")
acf(data_ts, type="partial", main="Partial Autocorrelation Function")
## week 4 Partial ACF
# ACF of MA(q) coefficent will cease at time = q
set.seed(123)
par(mfrow = c(3 ,1))
phi_1 <- 0.9
phi_2 <- 0.6
phi_3 <- 0.3
data_ts <- arima.sim(n = 500, list(ar = c(phi_1, phi_2, phi_3)))
## week 4 Partial ACF
# ACF of MA(q) coefficent will cease at time = q
set.seed(123)
par(mfrow = c(3 ,1))
phi_1 <- 0.9
phi_2 <- -0.6
phi_3 <- 0.3
data_ts <- arima.sim(n = 500, list(ar = c(phi_1, phi_2, phi_3)))
plot(data_ts, main=
paste("Autoregressive Process with phi1 =", phi_1, " phi2 =", phi_2, " phi3 = ", phi_3))
acf(data_ts, main="Autocorrelation Function")
acf(data_ts, type="partial", main="Partial Autocorrelation Function")
getwd()
setwd(paste0(getwd(), "Learning"))
setwd(paste0(getwd(),"Doccuments"))
setwd(paste0(getwd(),"Documents"))
setwd(paste0(getwd(),"Document"))
setwd(paste0(getwd(),"/Document"))
setwd(paste0(getwd(),"/Documents"))
setwd(paste0(getwd(),"/Learning"))
getwd()
## Beveridge
b <- read.table(file = "/Users/Danny/Documents/Learning/Coursera/R Practical Time Series Analysis-SUNY/beveridge-wheat-price-index-1500.csv")
View(d)
ls()
## Beveridge
b <- read.table(file = "/Users/Danny/Documents/Learning/Coursera/R Practical Time Series Analysis-SUNY/beveridge-wheat-price-index-1500.csv", header = T)
## Beveridge
b <- read.csv(file = "/Users/Danny/Documents/Learning/Coursera/R Practical Time Series Analysis-SUNY/beveridge-wheat-price-index-1500.csv", header = T)
View(B)
View(B)
View(b)
View(b)
b_ts <- ts(b, start = 1500)
plot(b_ts)
b_ts <- ts(b[,2], start = 1500)
plot(b_ts)
View(b_ts)
b_ts <- ts(b[,2], start = 1500)
View(b_ts)
## Beveridge
b <- read.csv(file = "/Users/Danny/Documents/Learning/Coursera/R Practical Time Series Analysis-SUNY/beveridge-wheat-price-index-1500.csv", header = T)
View(b)
b[370,] <- NULL
b <- b[1:370,]
View(b)
b_ts <- ts(b[,2], start = 1500)
View(b_ts)
class(b)
b_ts <- ts(b[,2], start = 1500)
View(b_ts)
class(b[,2])
str(b)
## Beveridge
b <- read.csv(file = "/Users/Danny/Documents/Learning/Coursera/R Practical Time Series Analysis-SUNY/beveridge-wheat-price-index-1500.csv",
header = T, stringsAsFactors = F)
b <- b[1:370, ]
b_ts <- ts(b[,2], start = 1500)
plot(b_ts)
plot(b_ts, ylab = 'price', main = "Beveridge Wheat Price Data")
b_ma <- filter(b_ts, rep(1/31, 31), sides = 2)
line(b_ma, col = "red")
lines(b_ma, col = "red")
acf(b_ts)
acf(b_ts)
class(b_ts)
acf(b_ts, type = 'covarience')
acf(b_ts, type = 'covariance')
class(b$Beveridge.wheat.price.index..1500.1869)
b_ts <- ts(as.numeric(b[,2]), start = 1500)
plot(b_ts, ylab = 'price', main = "Beveridge Wheat Price Data")
acf(b_ts)
# smoothe with MA of 30
b_ma <- filter(b_ts, rep(1/31, 31), sides = 2)
lines(b_ma, col = "red")
plot(b_ts, ylab = 'price', main = "Beveridge Wheat Price Data")
# smoothe with MA of 30
b_ma <- filter(b_ts, rep(1/31, 31), sides = 2)
lines(b_ma, col = "red")
par(mfrow = c(3,1))
Y <- b/b_ma
Y <- b_ts/b_ma
plot(Y, ylab = "scaled price", main = "Detrend data")
dev.off()
par(mfrow = c(3,1))
Y <- b_ts/b_ma
plot(Y, ylab = "scaled price", main = "Detrend data")
acf(na.omit(Y), main = "Autocorrelation")
acf(na.omit(Y), type = 'partial', main = "Partial Autocorrelation od detrend data")
