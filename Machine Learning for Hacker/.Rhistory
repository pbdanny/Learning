print("Hello world")
print("How are you")
print("Hello world")
print("How are you")
library(tm)
library(ggplot2)
install.packages(tm)
install.packages("tm")
install.packages(c("car", "DBI", "knitr", "RcmdrMisc", "tidyr"))
library(tm)
library(ggplot2)
spam.path <- "/Users/Danny/Downloads/spam/"
spam2.path <- "/Users/Danny/Downloads/spam_2/"
easyham.path <- "/Users/Danny/Downloads/easy_ham/"
easyham2.path <- "/Users/Danny/Downloads/easy_ham2/"
hardham.path <- "/Users/Danny/Downloads/hard_ham/"
hardham2.path <- "/Users/Danny/Downloads/hard_ham_2/"
?file
?which
which(LETTERS == "R")
which(LETTERS == "R", arr.ind = T)
class(LETTERS)
a <- LETTERS
which(a == "R")
which(a == "R", arr.ind = TRUE)
which(as.array(a) == "R", arr.ind = T)
spam.docs <- dir(spam.path)
rm(a)
spam.docs <- spam.docs[which(spam.docs!="cmds")]
all.spam <- sapply(spam.docs, function(p) get.msg(paste(spam.path,p,sep="")))
# Define function get msg ----
get.msg <- function(file_name) {
# Open file connection
con <- file(file_name, open = "rt", encoding = "latin1")
text <- readLines(con)
# The message always begins after the first full line break
# which return index of first == "" , add 1 more line , then fetch to msg
msg <- text[seq(which(text == "")[1] + 1, length(text), 1)]
close(con)
return(paste(msg, collapse="\n"))
}
all.spam <- sapply(spam.docs, function(p) get.msg(paste(spam.path,p,sep="")))
head(all.spam)
spam.docs <- dir(spam.path)
which(spam.docs != "cmds")
c <- c(1,2,3)
c[c == 1]
c[c == 3]
c[which(c == 3)]
rm(c)
library(tm)
library(ggplot2)
spam.path <- "/Users/Danny/Downloads/spam/"
spam2.path <- "/Users/Danny/Downloads/spam_2/"
easyham.path <- "/Users/Danny/Downloads/easy_ham/"
easyham2.path <- "/Users/Danny/Downloads/easy_ham2/"
hardham.path <- "/Users/Danny/Downloads/hard_ham/"
hardham2.path <- "/Users/Danny/Downloads/hard_ham_2/"
con <- file("/Users/Danny/Downloads/spam/00001.7848dde101aa985090474a91ec93fcf0", open = "rt", encoding = "latin1")
text <- readLines(con)
head(text)
View(text)
test
text
grep["", text]
text[text == ""]
text[text == "",]
text == ""
text[text == ""]
text[text != ""]
clear
text == ""
grep("""", text)
grep( "" , text)
grep( "" , text)
grep( "" , text)
grep( """, text)
)
grep( """", text)
grep( "/"/"", text)
grep( "\"\"", text)
regexpr("", text)
gregexpr("", text)
regexec("", text)
regexec("", text)
which(text == "")
text == ""
regexpr("", text)
gregexpr("", text)
# Define function get msg ----
get.msg <- function(file_name) {
# Open file connection
con <- file(file_name, open = "rt", encoding = "latin1")
text <- readLines(con)
# The message always begins after the first full line break
# which return index of first == "" , start with next line , then fetch to the last line
msg <- text[seq(which(text == "")[1] + 1, length(text), 1)]
close(con)
return(paste(msg, collapse="\n"))
}
spam.docs <- dir(spam.path)
spam.docs <- spam.docs[which(spam.docs!="cmds")]
all.spam <- sapply(spam.docs, function(p) get.msg(paste(spam.path,p,sep="")))
View(all.spam)
head(all.spam)
con <- file(file_name, open = "rt", encoding = "latin1")
con <- file("/Users/Danny/Downloads/spam/00001.7848dde101aa985090474a91ec93fcf0", open = "rt", encoding = "latin1")
text <- readLines(con)
class(text)
fix(text)
class(text)
text
which(text == "")
msg <- text[which(text == "")[1] + 1, length(text), 1]
msg <- text[seq(which(text == "")[1] + 1, length(text), 1)]
msg
x <- paste(msg, sep = "\n")
y <- paste(msg, collapse ="\n")
x
y
spam.docs <- dir(spam.path)
head(spam.docs)
tail(spam.docs)
spam.docs <- spam.docs[spam.docs != "cmds"]
head(all.spam)
stopwords()
?VectorSource
docs <- c("This is a text.", "This another one.")
(vs <- VectorSource(docs))
vs
cr <- Corpus(vs)
cr
minDocFreq=2)
get.tdm <- function(doc.vec) {
# VectorSource convert vector of charactor to object VectorSource
# Corpus convert object VectorSource to object Corpus
doc.corpus <- Corpus(VectorSource(doc.vec))
# Create control parameter for object TDM
control <- list(stopwords=TRUE, removePunctuation=TRUE, removeNumbers=TRUE,
minDocFreq=2)
doc.dtm <- TermDocumentMatrix(doc.corpus, control)
return(doc.dtm)
}
spam.tdm <- get.tdm(all.spam)
spam.matrix <- as.matrix(spam.tdm)
View(spam.matrix)
spam.counts <- rowSums(spam.matrix)
View(spam.matrix)
dim(spam.matrix)
spam.counts <- rowSums(spam.matrix)
spam.df <- data.frame(cbind(names(spam.counts),
as.numeric(spam.counts)), stringsAsFactors=FALSE)
names(spam.df) <- c("term","frequency")
View(spam.df)
spam.df$frequency <- as.numeric(spam.df$frequency)
spam.occurrence <- sapply(1:nrow(spam.matrix),
function(i) {length(which(spam.matrix[i,] > 0))/ncol(spam.matrix)})
spam.density <- spam.df$frequency/sum(spam.df$frequency)
spam.df <- transform(spam.df, density=spam.density, occurrence=spam.occurrence)
View(spam.df)
head(spam.df[with(spam.df, order(-occurrence)),])
head(spam.df[order(-occurrence),])
spam.df[order(-occurrence),]
spam.df[order(-occurrence)]
order(spam.df$occurrence)
order(-spam.df$occurrence)
head(order(-spam.df$occurrence))
head(spam.df[order(-spam.df$occurrence),])
head(spam.df[order(-spam.df$occurrence)])
head(spam.df[order(-spam.df$occurrence),])
