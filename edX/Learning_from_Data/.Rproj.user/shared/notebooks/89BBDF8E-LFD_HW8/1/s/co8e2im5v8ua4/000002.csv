"0","fnSVMRBF <- function(train, test, C = 0.01, Q = 2) {"
"0","  re.list <- list()"
"0","  model <- svm(x = train[ ,c(""inten"",""sym"")],"
"0","               y = train[ ,""Y""],"
"0","               type = ""C-classification"", scale = FALSE, "
"0","               kernel = ""radial"", degree = Q, cost = C)"
"0","  pred <- predict(model, newdata = train[ ,c(""inten"",""sym"")])"
"0","  Ein <- sum(train$Y != pred)/nrow(train)"
"0","  pred <- predict(model, newdata = test[ ,c(""inten"",""sym"")])"
"0","  Eout <- sum(test$Y != pred)/nrow(test)"
"0","  re.list <- cbind(re.list, c(C, Q, model$tot.nSV, Ein, Eout))"
"0","  return(re.list)"
"0","}"
"0","fnSVMRBFDigit <- function(train, test, digit1, digit2 = NA, C = 0.01, Q = 2) {"
"0","  d.tr <- fnDigitTestType(train, digit1, digit2)"
"0","  d.te <- fnDigitTestType(test, digit1, digit2)"
"0","  x <- as.data.frame.list(fnSVMRBF(d.tr, d.te, C, Q))"
"0","  x$digit <- digit1"
"0","  x <- x[, c(6,1:5)]"
"0","  colnames(x)  <- c(""digit"", ""C"", ""Q"", ""noSupportVec"", ""Ein"", ""Eout"")"
"0","  return(x)"
"0","}"
"0","ans6 <- list()"
"0","for (C in c(0.01, 1, 100, 1e4, 1e6)) {"
"0","  x <- fnSVMRBFDigit(d.train, d.test, 1, 5, C, 2)"
"0","  ans6 <- rbind(ans6, x)"
"0","}"
