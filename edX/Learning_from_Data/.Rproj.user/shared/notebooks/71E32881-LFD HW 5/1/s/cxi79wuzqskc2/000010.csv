"0","# define fixed parameter learning rate (nu), In-sample size (N)"
"0","nu <- 0.01"
"0","N <- 100"
"0","for (j in 1:10) {"
"0","  ## Input & Output initialization"
"0","  # Create In-sample input X {R,R,R} and output Y {R}"
"0","  x0 <- 1"
"0","  x1 <- runif(min = -1, max = 1, n = N)"
"0","  x2 <- runif(min = -1, max = 1, n = N)"
"0","  X <- data.frame(x0, x1, x2)"
"0","  # Create cut-off line for determine output Y"
"0","  # Random 2 points from X "
"0","  p1 <- X[sample(1:nrow(X), size = 1), ]"
"0","  p2 <- X[sample(1:nrow(X), size = 1), ]"
"0","  # Create cutoff line from random points"
"0","  y.slope <- (p1$x2 - p2$x2) / (p1$x1 - p2$x1)"
"0","  y.int <- y.slope * p1$x1"
"0","  # assign output y according to cutoff line created"
"0","  Y <- ifelse(X$x2 > (X$x1 * y.slope + y.int), 1,-1)"
"0","  "
"0","  ## Stachostic GA Parts"
"0","  # initialized weigh(w), no epoches count (n.epoch), initial gradient (gr.e)"
"0","  w <- matrix(0, nrow = 1, ncol = 3)"
"0","  n.epoch <- 0"
"0","  all.epoch <- list()"
"0","  gr.e <- matrix(100, nrow = 1, ncol = 3)"
"0","  "
"0","  while (norm(gr.e) * nu >= 0.01) {"
"0","    "
"0","    #shuffle data X"
"0","    X <- X[sample(1:N, size = N),]"
"0","    rownames(X) <- NULL"
"0","    "
"0","    #Start Stochastic GD each epoch"
"0","    for (i in 1:N) {"
"0","      gr.e <- -1 * (Y[i] %*% as.matrix(X[i,])) / as.integer(1 + exp(Y[i] %*% as.matrix(X[i,]) %*% t(as.matrix(w))))"
"0","      w <- w - (nu * gr.e)"
"0","      "
"0","    }#for each epoch"
"0","    n.epoch <- n.epoch + 1"
"0","    "
"0","  }#while gradient step >= 0.01"
"0","  "
"0","  all.epoch[[i]] <- n.epoch"
"0","}"
"2","
"
